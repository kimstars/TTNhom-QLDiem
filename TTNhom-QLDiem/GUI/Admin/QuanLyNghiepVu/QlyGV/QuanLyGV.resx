<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label12.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>